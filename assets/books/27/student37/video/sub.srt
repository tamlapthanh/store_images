1
00:00:00,694 --> 00:00:01,351
review came back.

2
00:00:02,371 --> 00:00:05,974
The project lead was very impressed with the quality of the code he committed.

3
00:00:06,660 --> 00:00:06,772


4
00:00:07,440 --> 00:00:09,532
code was not documented well enough.

5
00:00:10,304 --> 00:00:11,910
And that did not make her happy.

6
00:00:12,920 --> 00:00:15,321
As we all know, good documentation is essential.

7
00:00:16,036 --> 00:00:20,498
A well-written code base up until a certain level documents itself.

8
00:00:21,160 --> 00:00:23,129
Let's say by using good method names.

9
00:00:23,812 --> 00:00:24,900
variable names and so on.

10
00:00:25,714 --> 00:00:27,307
But that alone is rarely enough.

11
00:00:28,422 --> 00:00:30,812
Let's see how CoPilot can help with this.

12
00:00:31,948 --> 00:00:34,621
There's actually a documenting command built into code.

13
00:00:35,304 --> 00:00:38,624
I've shown it to you when we first took a lap around Copacabana.

14
00:00:39,820 --> 00:00:42,409
Let me open the order handler.

15
00:00:43,598 --> 00:00:44,037
There we go.

16
00:00:44,847 --> 00:00:47,164
There's not enough documentation here yet.

17
00:00:48,665 --> 00:00:49,576
So let's just...

18
00:00:50,317 --> 00:00:50,948
Moscow

19
00:00:51,966 --> 00:00:52,417
document.

20
00:00:54,185 --> 00:00:59,378
It suggests documentation for the get orders async method.

21
00:01:00,378 --> 00:01:00,698


22
00:01:01,357 --> 00:01:01,850
acceptance

23
00:01:03,622 --> 00:01:05,664
and it automatically did the same.

24
00:01:06,438 --> 00:01:07,427
the other methods.

25
00:01:08,620 --> 00:01:11,620
And that is how easy it is to add documentation to your code.

26
00:01:13,379 --> 00:01:15,311
Don't forget to validate that the

